#pragma once

#include <array>
#include <string>

/// @brief UUID represents a UUID; this can be default constructed (a nil UUID), constructed from a
/// array of raw uuid data or generated by a UUIDGenerator
class UUID
{
public:
  /// @brief default construct an empty UUID
  UUID() = default;

  /// @brief number of bytes the uuid contains
  static constexpr std::uint8_t num_bytes__{16};

  using uuid_array_t = std::array<std::uint8_t, num_bytes__>;

  /// @brief Construct UUID from data
  constexpr explicit UUID(uuid_array_t data)
    : data_(data)
  {
  }

  /// @brief convert string from UUID object
  /// @return string representing the UUID
  std::string to_string() const;

private:
  /// contains the raw uuid data
  uuid_array_t data_{};
};
